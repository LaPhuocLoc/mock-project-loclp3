openapi: 3.0.3
info:
  title: Employee API
  version: "1.0.0"
  description: API for CRUD operations on employee resources (mock)

servers:
  - url: http://localhost:3000
    description: JSON Server mock backend

paths:
  /employees:
    get:
      summary: Retrieve a list of employees
      description: Returns an array of employee objects
      responses:
        '200':
          description: A list of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    post:
      summary: Create a new employee
      description: Adds a new employee to the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEmployee'
      responses:
        '201':
          description: Employee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'

  /employees/{id}:
    parameters:
      - name: id
        in: path
        description: ID of the employee
        required: true
        schema:
          type: integer
    get:
      summary: Retrieve an employee by ID
      description: Returns a single employee object
      responses:
        '200':
          description: Employee details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Employee not found
    put:
      summary: Update an existing employee
      description: Updates the details of an existing employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Employee updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Employee not found
    delete:
      summary: Delete an employee
      description: Removes an employee from the database
      responses:
        '204':
          description: Employee deleted successfully
        '404':
          description: Employee not found

components:
  schemas:
    Employee:
      type: object
      description: A full representation of an employee
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Nguyễn Văn A"
        email:
          type: string
          format: email
          example: "vana@example.com"
        department:
          type: string
          example: "HR"
        phone:
          type: string
          example: "0901234567"
      required:
        - id
        - name
        - email
        - department
        - phone

    NewEmployee:
      type: object
      description: Data required to create a new employee (ID is generated by the server)
      properties:
        name:
          type: string
          example: "Nguyễn Văn A"
        email:
          type: string
          format: email
          example: "vana@example.com"
        department:
          type: string
          example: "HR"
        phone:
          type: string
          example: "0901234567"
      required:
        - name
        - email
        - department
        - phone
